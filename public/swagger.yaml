openapi: 3.1.0
info:
  title: Eksootikareisid API
  version: 1.0.0
  description: API documentation for Eksootikareisid travel platform
servers:
  - url: /api
    description: API server
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        phone:
          type: string
        role:
          type: string
          enum: [user, admin]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Error:
      type: object
      properties:
        error:
          type: string
paths:
  /users:
    get:
      summary: Get all users
      description: Retrieve a list of all users. Requires admin authentication.
      tags: [Users]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new user
      description: Register a new user account
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - phone
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
                phone:
                  type: string
      responses:
        '201':
          description: User created successfully
        '400':
          description: Invalid input
        '500':
          description: Server error
  /users/{id}:
    get:
      summary: Get user by ID
      description: Retrieve a specific user by their ID. Requires authentication.
      tags: [Users]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete user
      description: Delete a specific user by their ID. Requires admin authentication.
      tags: [Users]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
